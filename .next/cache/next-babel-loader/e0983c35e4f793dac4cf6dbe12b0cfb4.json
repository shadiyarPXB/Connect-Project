{"ast":null,"code":"var _jsxFileName = \"/Users/mdshifut/Downloads/Connect-Project-master/components/ProgressBar/MultiProgressBar.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nconst ProgressBarWrapper = styled.div.withConfig({\n  displayName: \"MultiProgressBar__ProgressBarWrapper\",\n  componentId: \"sc-16css2u-0\"\n})([\"position:relative;height:\", \";border-radius:\", \";background-color:\", \";overflow:hidden;\"], props => props.height || '8px', props => props.borderRadius || '50px', props => props.bg || '#A0AAA5');\nconst ProgressBar = styled.div.withConfig({\n  displayName: \"MultiProgressBar__ProgressBar\",\n  componentId: \"sc-16css2u-1\"\n})([\"position:absolute;height:100%;top:0;left:0;content:'';transition:0.3s;background-color:\", \";width:\", \";z-index:\", \";\"], props => props.progressBg || '#264E46', props => props.value + '%', props => props.index + 1);\n\nconst MultiProgressBar = ({\n  progresses,\n  height\n}) => {\n  const sortedProgresses = progresses.sort(function (a, b) {\n    return b.value - a.value;\n  });\n  return __jsx(ProgressBarWrapper, {\n    height: height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, sortedProgresses.map((progress, index) => __jsx(ProgressBar, {\n    key: index,\n    value: progress.value,\n    progressBg: progress.color,\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default MultiProgressBar;","map":{"version":3,"sources":["/Users/mdshifut/Downloads/Connect-Project-master/components/ProgressBar/MultiProgressBar.tsx"],"names":["styled","ProgressBarWrapper","div","props","height","borderRadius","bg","ProgressBar","progressBg","value","index","MultiProgressBar","progresses","sortedProgresses","sort","a","b","map","progress","color"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,gGAETC,KAAD,IAAWA,KAAK,CAACC,MAAN,IAAgB,KAFjB,EAGFD,KAAD,IAAWA,KAAK,CAACE,YAAN,IAAsB,MAH9B,EAICF,KAAD,IAAWA,KAAK,CAACG,EAAN,IAAY,SAJvB,CAAxB;AAQA,MAAMC,WAAW,GAAGP,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,6HAOQC,KAAD,IAAWA,KAAK,CAACK,UAAN,IAAoB,SAPtC,EAQHL,KAAD,IAAWA,KAAK,CAACM,KAAN,GAAc,GARrB,EASDN,KAAD,IAAWA,KAAK,CAACO,KAAN,GAAc,CATvB,CAAjB;;AAsBA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcR,EAAAA;AAAd,CAAD,KAA8C;AACnE,QAAMS,gBAAgB,GAAGD,UAAU,CAACE,IAAX,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrD,WAAOA,CAAC,CAACP,KAAF,GAAUM,CAAC,CAACN,KAAnB;AACH,GAFwB,CAAzB;AAIA,SACI,MAAC,kBAAD;AAAoB,IAAA,MAAM,EAAEL,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,gBAAgB,CAACI,GAAjB,CAAqB,CAACC,QAAD,EAAWR,KAAX,KAClB,MAAC,WAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,KAAK,EAAEQ,QAAQ,CAACT,KAFpB;AAGI,IAAA,UAAU,EAAES,QAAQ,CAACC,KAHzB;AAII,IAAA,KAAK,EAAET,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAYH,CAjBD;;AAmBA,eAAeC,gBAAf","sourcesContent":["import styled from 'styled-components';\n\nconst ProgressBarWrapper = styled.div`\n    position: relative;\n    height: ${(props) => props.height || '8px'};\n    border-radius: ${(props) => props.borderRadius || '50px'};\n    background-color: ${(props) => props.bg || '#A0AAA5'};\n    overflow: hidden;\n`;\n\nconst ProgressBar = styled.div`\n    position: absolute;\n    height: 100%;\n    top: 0;\n    left: 0;\n    content: '';\n    transition: 0.3s;\n    background-color: ${(props) => props.progressBg || '#264E46'};\n    width: ${(props) => props.value + '%'};\n    z-index: ${(props) => props.index + 1};\n`;\n\ninterface ProgressesProps {\n    value: number;\n    color?: string;\n}\n\ninterface ProgressBarProps {\n    progresses: ProgressesProps[];\n    height?: string;\n}\n\nconst MultiProgressBar = ({ progresses, height }: ProgressBarProps) => {\n    const sortedProgresses = progresses.sort(function (a, b) {\n        return b.value - a.value;\n    });\n\n    return (\n        <ProgressBarWrapper height={height}>\n            {sortedProgresses.map((progress, index) => (\n                <ProgressBar\n                    key={index}\n                    value={progress.value}\n                    progressBg={progress.color}\n                    index={index}\n                />\n            ))}\n        </ProgressBarWrapper>\n    );\n};\n\nexport default MultiProgressBar;\n"]},"metadata":{},"sourceType":"module"}