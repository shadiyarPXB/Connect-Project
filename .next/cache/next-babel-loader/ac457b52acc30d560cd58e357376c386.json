{"ast":null,"code":"var _jsxFileName = \"/Users/mdshifut/Downloads/Connect-Project-master/components/CalculatedText/CalculatedText.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst CalculatedText = ({\n  value\n}) => {\n  if (value > 1.5 && value < 3) {\n    return __jsx(React.Fragment, null, __jsx(\"span\", {\n      style: {\n        color: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }\n    }, \"ETH will give\"), ' ', value * 7.14, ' ', __jsx(\"span\", {\n      style: {\n        color: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"CT. + 150\"), ' ', \"CTx tokens will be distributed after transaction confirmation.\");\n  } else if (value > 3) {\n    return __jsx(React.Fragment, null, __jsx(\"span\", {\n      style: {\n        color: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"ETH will give\"), ' ', value * 7.14, ' ', __jsx(\"span\", {\n      style: {\n        color: '#000'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"CT + 300\"), ' ', \"CTx tokens will be distributed after transaction confirmation.\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"ETH will give\"), ' ', value * 7.14, ' ', __jsx(\"span\", {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"CT\"), ' ', \"Get up to 300 CTx tokens for > 1.5 ETH\");\n};\n\nexport default CalculatedText;","map":{"version":3,"sources":["/Users/mdshifut/Downloads/Connect-Project-master/components/CalculatedText/CalculatedText.tsx"],"names":["CalculatedText","value","color"],"mappings":";;;;AAIA,MAAMA,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoC;AACvD,MAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,CAA3B,EAA8B;AAC1B,WACI,4BACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAOY,GAPZ,EAQKD,KAAK,GAAG,IARb,EAQmB,GARnB,EASI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATJ,EAeY,GAfZ,mEADJ;AAoBH,GArBD,MAqBO,IAAID,KAAK,GAAG,CAAZ,EAAe;AAClB,WACI,4BACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAOY,GAPZ,EAQKD,KAAK,GAAG,IARb,EAQmB,GARnB,EASI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,EAeY,GAfZ,mEADJ;AAoBH;;AACD,SACI,4BACI;AACI,IAAA,KAAK,EAAE;AACHA,MAAAA,KAAK,EAAE;AADJ,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAOY,GAPZ,EAQKD,KAAK,GAAG,IARb,EAQmB,GARnB,EASI;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AADJ,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATJ,EAeY,GAfZ,2CADJ;AAoBH,CAhED;;AAkEA,eAAeF,cAAf","sourcesContent":["interface CalculatedTextProps {\n    value: number;\n}\n\nconst CalculatedText = ({ value }: CalculatedTextProps) => {\n    if (value > 1.5 && value < 3) {\n        return (\n            <>\n                <span\n                    style={{\n                        color: '#000',\n                    }}\n                >\n                    ETH will give\n                </span>{' '}\n                {value * 7.14}{' '}\n                <span\n                    style={{\n                        color: '#000',\n                    }}\n                >\n                    CT. + 150\n                </span>{' '}\n                CTx tokens will be distributed after transaction confirmation.\n            </>\n        );\n    } else if (value > 3) {\n        return (\n            <>\n                <span\n                    style={{\n                        color: '#000',\n                    }}\n                >\n                    ETH will give\n                </span>{' '}\n                {value * 7.14}{' '}\n                <span\n                    style={{\n                        color: '#000',\n                    }}\n                >\n                    CT + 300\n                </span>{' '}\n                CTx tokens will be distributed after transaction confirmation.\n            </>\n        );\n    }\n    return (\n        <>\n            <span\n                style={{\n                    color: '#000',\n                }}\n            >\n                ETH will give\n            </span>{' '}\n            {value * 7.14}{' '}\n            <span\n                style={{\n                    color: '#000',\n                }}\n            >\n                CT\n            </span>{' '}\n            Get up to 300 CTx tokens for &gt; 1.5 ETH\n        </>\n    );\n};\n\nexport default CalculatedText;\n"]},"metadata":{},"sourceType":"module"}