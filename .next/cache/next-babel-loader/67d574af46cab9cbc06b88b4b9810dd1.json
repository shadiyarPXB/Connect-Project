{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mdshifut/Downloads/Connect-Project-master/components/ProgressBar/MultiProgressBar.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nvar ProgressBarWrapper = styled.div.withConfig({\n  displayName: \"MultiProgressBar__ProgressBarWrapper\",\n  componentId: \"sc-16css2u-0\"\n})([\"position:relative;height:\", \";border-radius:\", \";background-color:\", \";overflow:hidden;\"], function (props) {\n  return props.height || '8px';\n}, function (props) {\n  return props.borderRadius || '50px';\n}, function (props) {\n  return props.bg || '#A0AAA5';\n});\n_c = ProgressBarWrapper;\nvar ProgressBar = styled.div.withConfig({\n  displayName: \"MultiProgressBar__ProgressBar\",\n  componentId: \"sc-16css2u-1\"\n})([\"position:absolute;height:100%;top:0;left:0;content:'';transition:0.3s;background-color:\", \";width:\", \";z-index:\", \";\"], function (props) {\n  return props.progressBg || '#264E46';\n}, function (props) {\n  return props.value + '%';\n}, function (props) {\n  return props.index + 1;\n});\n_c2 = ProgressBar;\n\nvar MultiProgressBar = function MultiProgressBar(_ref) {\n  var progresses = _ref.progresses,\n      height = _ref.height;\n  var sortedProgresses = progresses.sort(function (a, b) {\n    return b.value - a.value;\n  });\n  return __jsx(ProgressBarWrapper, {\n    height: height,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, sortedProgresses.map(function (progress, index) {\n    return __jsx(ProgressBar, {\n      key: index,\n      value: progress.value,\n      progressBg: progress.color,\n      index: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    });\n  }));\n};\n\n_c3 = MultiProgressBar;\nexport default MultiProgressBar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProgressBarWrapper\");\n$RefreshReg$(_c2, \"ProgressBar\");\n$RefreshReg$(_c3, \"MultiProgressBar\");","map":{"version":3,"sources":["/Users/mdshifut/Downloads/Connect-Project-master/components/ProgressBar/MultiProgressBar.tsx"],"names":["styled","ProgressBarWrapper","div","props","height","borderRadius","bg","ProgressBar","progressBg","value","index","MultiProgressBar","progresses","sortedProgresses","sort","a","b","map","progress","color"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,kBAAkB,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,gGAEV,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,MAAN,IAAgB,KAA3B;AAAA,CAFU,EAGH,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACE,YAAN,IAAsB,MAAjC;AAAA,CAHG,EAIA,UAACF,KAAD;AAAA,SAAWA,KAAK,CAACG,EAAN,IAAY,SAAvB;AAAA,CAJA,CAAxB;KAAML,kB;AAQN,IAAMM,WAAW,GAAGP,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,6HAOO,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACK,UAAN,IAAoB,SAA/B;AAAA,CAPP,EAQJ,UAACL,KAAD;AAAA,SAAWA,KAAK,CAACM,KAAN,GAAc,GAAzB;AAAA,CARI,EASF,UAACN,KAAD;AAAA,SAAWA,KAAK,CAACO,KAAN,GAAc,CAAzB;AAAA,CATE,CAAjB;MAAMH,W;;AAsBN,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA8C;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;AAAA,MAA/BR,MAA+B,QAA/BA,MAA+B;AACnE,MAAMS,gBAAgB,GAAGD,UAAU,CAACE,IAAX,CAAgB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrD,WAAOA,CAAC,CAACP,KAAF,GAAUM,CAAC,CAACN,KAAnB;AACH,GAFwB,CAAzB;AAIA,SACI,MAAC,kBAAD;AAAoB,IAAA,MAAM,EAAEL,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,gBAAgB,CAACI,GAAjB,CAAqB,UAACC,QAAD,EAAWR,KAAX;AAAA,WAClB,MAAC,WAAD;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,KAAK,EAAEQ,QAAQ,CAACT,KAFpB;AAGI,MAAA,UAAU,EAAES,QAAQ,CAACC,KAHzB;AAII,MAAA,KAAK,EAAET,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAArB,CADL,CADJ;AAYH,CAjBD;;MAAMC,gB;AAmBN,eAAeA,gBAAf","sourcesContent":["import styled from 'styled-components';\n\nconst ProgressBarWrapper = styled.div`\n    position: relative;\n    height: ${(props) => props.height || '8px'};\n    border-radius: ${(props) => props.borderRadius || '50px'};\n    background-color: ${(props) => props.bg || '#A0AAA5'};\n    overflow: hidden;\n`;\n\nconst ProgressBar = styled.div`\n    position: absolute;\n    height: 100%;\n    top: 0;\n    left: 0;\n    content: '';\n    transition: 0.3s;\n    background-color: ${(props) => props.progressBg || '#264E46'};\n    width: ${(props) => props.value + '%'};\n    z-index: ${(props) => props.index + 1};\n`;\n\ninterface ProgressesProps {\n    value: number;\n    color?: string;\n}\n\ninterface ProgressBarProps {\n    progresses: ProgressesProps[];\n    height?: string;\n}\n\nconst MultiProgressBar = ({ progresses, height }: ProgressBarProps) => {\n    const sortedProgresses = progresses.sort(function (a, b) {\n        return b.value - a.value;\n    });\n\n    return (\n        <ProgressBarWrapper height={height}>\n            {sortedProgresses.map((progress, index) => (\n                <ProgressBar\n                    key={index}\n                    value={progress.value}\n                    progressBg={progress.color}\n                    index={index}\n                />\n            ))}\n        </ProgressBarWrapper>\n    );\n};\n\nexport default MultiProgressBar;\n"]},"metadata":{},"sourceType":"module"}